spring.profiles.active=dev

# Porta da aplicação
server.port=${SERVER_PORT:8080}

# Datasource
spring.datasource.url=${DATASOURCE_DB:jdbc:postgresql://localhost:5432/bd_propostas}
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri = ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/Propostas}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/Propostas/protocol/openid-connect/certs}
management.endpoints.web.exposure.include=*
management.endpoints.web.cors.allowed-origins=*
management.endpoints.health.show-details=always
management.metrics.export.prometheus.enable=true
management.metrics.tags.aplicacao=servico de propostas
management.metrics.tags.ambiente=desenvolvimento
management.endpoint.prometheus.enabled=true

# Opentracing - Jager
opentracing.jaeger.log-spans=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${APP_NAME:propostas-api}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Crypto
jasypt.password=${JASYPT_PASSWORD:123456}
